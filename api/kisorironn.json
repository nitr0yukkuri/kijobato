[
  {
    "id": 181,
    "word": "基数",
    "description": "数値を表現する際の基準となる数。2進数なら2、10進数なら10。RadixまたはBaseともいう。"
  },
  {
    "id": 182,
    "word": "2の補数",
    "description": "コンピュータで負の整数を表現するために最も広く使われる方式。"
  },
  {
    "id": 183,
    "word": "固定小数点数",
    "description": "小数点の位置を固定して数値を表現する方法。整数部と小数部の桁数が決まっている。"
  },
  {
    "id": 184,
    "word": "単精度浮動小数点数",
    "description": "32ビット（4バイト）のデータで実数を近似的に表現する方法。"
  },
  {
    "id": 185,
    "word": "倍精度浮動小数点数",
    "description": "64ビット（8バイト）のデータで、単精度よりも高い精度で実数を表現する方法。"
  },
  {
    "id": 186,
    "word": "仮数部",
    "description": "浮動小数点数において、数値の有効数字を表す部分。Mantissaともいう。"
  },
  {
    "id": 187,
    "word": "指数部",
    "description": "浮動小数点数において、小数点の位置を調整するための指数を表す部分。"
  },
  {
    "id": 188,
    "word": "BCD",
    "description": "Binary-Coded Decimal。10進数の各桁を、それぞれ4ビットの2進数で表現する方法。"
  },
  {
    "id": 189,
    "word": "パック10進数",
    "description": "1バイトに10進数の2桁を格納するデータ形式。BCDの一種。"
  },
  {
    "id": 190,
    "word": "論理シフト",
    "description": "ビット列を左右に移動させ、空いたビットには常に0を埋めるシフト演算。"
  },
  {
    "id": 191,
    "word": "算術シフト",
    "description": "ビット列を左右に移動させるシフト演算。右シフトの際、最上位の符号ビットを維持する。"
  },
  {
    "id": 192,
    "word": "桁落ち",
    "description": "絶対値がほぼ等しい2つの数値の差を計算した際に、有効桁数が大幅に減少してしまう誤差。"
  },
  {
    "id": 193,
    "word": "情報落ち",
    "description": "絶対値が大きく異なる2つの数値を加減算した際に、小さい方の数値が計算結果に反映されなくなる誤差。"
  },
  {
    "id": 194,
    "word": "オーバーフロー",
    "description": "計算結果が、その数値を格納するデータ型で表現できる最大値を超えてしまうこと。"
  },
  {
    "id": 195,
    "word": "アンダーフロー",
    "description": "計算結果の絶対値が、表現できる最小の正の数よりも小さくなり、0とみなされること。"
  },
  {
    "id": 196,
    "word": "単精度",
    "description": "浮動小数点数を32ビットで表現すること。"
  },
  {
    "id": 197,
    "word": "倍精度",
    "description": "浮動小数点数を64ビットで表現すること。"
  },
  {
    "id": 198,
    "word": "ベン図",
    "description": "複数の集合の関係を、円や四角の重なりで視覚的に表現するための図。"
  },
  {
    "id": 199,
    "word": "和集合",
    "description": "複数の集合の少なくとも一方に含まれる要素をすべて集めた集合。A∪Bと表記する。"
  },
  {
    "id": 200,
    "word": "積集合",
    "description": "複数の集合のすべてに共通して含まれる要素だけを集めた集合。A∩Bと表記する。"
  },
  {
    "id": 201,
    "word": "補集合",
    "description": "全体集合のうち、ある特定の集合に含まれない要素をすべて集めた集合。"
  },
  {
    "id": 202,
    "word": "部分集合",
    "description": "ある集合の要素が、すべて別のより大きな集合に含まれているときの、その小さい方の集合。"
  },
  {
    "id": 203,
    "word": "真",
    "description": "命題が正しい状態のこと。True。通常は1で表される。"
  },
  {
    "id": 204,
    "word": "偽",
    "description": "命題が誤っている状態のこと。False。通常は0で表される。"
  },
  {
    "id": 205,
    "word": "命題論理",
    "description": "真か偽かを判断できる文（命題）を基本的な単位として、その間の関係を扱う論理体系。"
  },
  {
    "id": 206,
    "word": "否定",
    "description": "命題の真偽を反転させる論理演算。「〜でない」。NOT演算。"
  },
  {
    "id": 207,
    "word": "論理和",
    "description": "複数の命題のうち、少なくとも1つが真であれば結果が真となる論理演算。「または」。OR演算。"
  },
  {
    "id": 208,
    "word": "論理積",
    "description": "複数の命題のすべてが真である場合にのみ、結果が真となる論理演算。「かつ」。AND演算。"
  },
  {
    "id": 209,
    "word": "排他的論理和",
    "description": "2つの命題の真偽が異なるときに真となる論理演算。XOR演算。"
  },
  {
    "id": 210,
    "word": "否定論理和",
    "description": "論理和(OR)の結果を否定(NOT)する論理演算。NOR演算。"
  },
  {
    "id": 211,
    "word": "否定論理積",
    "aliases": ["XOR","xor"], 
    "description": "論理積(AND)の結果を否定(NOT)する論理演算。NAND演算。"
  },
  {
    "id": 212,
    "word": "論理関数",
    "description": "複数の論理変数（真偽値）を入力とし、1つの真偽値を出力する関数。"
  },
  {
    "id": 213,
    "word": "分配則",
    "description": "論理積と論理和の間などに成り立つ法則。A∧(B∨C) = (A∧B)∨(A∧C)などがある。"
  },
  {
    "id": 214,
    "word": "ド・モルガンの法則",
    "description": "否定と論理積・論理和の関係を示す重要な法則。「AかつB」の否定は「Aでない、またはBでない」など。"
  }
]