/* 左上に表示されるロゴのスタイル */
.game-logo {
    position: fixed;
    top: 20px;
    left: 20px;
    max-width: 300px;
    z-index: 100;
}

/* ===== ゲーム画面UI ===== */
#game-ui {
    opacity: 1;
}

.timer {
    position: fixed;
    top: 250px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 2.5rem;
    font-weight: bold;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
}

/* ★★★★★ここから変更★★★★★ */

/* 上部に表示するCPUの入力内容表示エリア */
#cpu-turn-display {
    /* .input-area のスタイルをコピー */
    position: fixed;
    background-color: rgba(0, 0, 0, 0.75);
    border: 2px solid white;
    width: 600px;
    padding: 25px 40px; /* 高さをなくした分、paddingを調整 */
    box-sizing: border-box;
    border-radius: 15px;
    text-align: center;
    box-shadow: 0 4px 15px rgba(0,0,0,0.5);

    /* .input-area p の文字スタイルをコピー */
    font-size: 1.5rem;
    font-weight: bold;
    color: white;

    /* 位置をタイマーと中央入力エリアの間に調整 */
    top: 15%; 
    left: 50%;
    transform: translate(-50%, -50%);
    
    /* 表示・非表示のためのトランジション */
    
  
}
.hidden {
    opacity: 0;
    pointer-events: none; /* クリック等のイベントも無効化 */
}


/* ★★★★★ここまで変更★★★★★ */


.input-area {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: rgba(0, 0, 0, 1);
    border: 2px solid white;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 600px;
    height: 300px;
    padding: 40px;
    box-sizing: border-box;
    border-radius: 15px;
    text-align: center;
    box-shadow: 0 4px 15px rgba(0,0,0,0.5);
}

.input-area p {
    margin-bottom: 20px;
    font-size: 1.7rem;
    font-weight: bold;
    color: white; 
}

.input-area input {
    width: 80%;
    max-width: 400px;
    padding: 15px;
    border-radius: 8px;
    background-color: transparent;
    border: 1px solid green;
    color: #55ff44 !important;
    text-align: center;
    font-size: 1.7rem;
    opacity: 1;
    font-weight: 500;
}

.input-area input::placeholder {
    color: rgba(65, 241, 94, 0.7);
}

.input-area input:focus {
    outline: none;
    border: 1px solid green;
}

#feedback-message {
    font-size: 1.6em;
    position: absolute;
    top: 40px;
    left: 50%;
    transform: translateX(-50%);
    width: 90%;
    color: yellow;
    padding: 10px 15px;
    border-radius: 8px;
    text-align: center;
    font-weight: bold;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
    pointer-events: none;
    margin-bottom: 0;
}

#feedback-message.show {
    opacity: 1;
}

/* 左側に表示する結果エリア */
#result-display {
    position: fixed;
    left: 50px;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(53, 65, 255, 0.75);
    color: white;
    padding: 25px;
    width: 500px;
    border-radius: 15px;
    border: 2px solid white;
    box-shadow: 0 4px 15px rgba(0,0,0,0.5);
    opacity: 1;
    transition: opacity 0.4s ease-in-out;
}

#result-display p {
    margin: 0 0 10px 0;
    font-weight: bold;
}

/* ★変更点: 一行目の文字サイズ */
#result-display p:first-child {
    font-size: 1.8rem;
}

/* ★変更点: 二行目の文字サイズ */
#result-display p:last-child {
    font-size: 1.2rem;
    margin-bottom: 0;
}

#result-display span {
    color: #ffdd57;
}

.hidden {
    opacity: 0;
    pointer-events: none;
}

/* 右側に表示するCPUの結果エリア */
#cpu-display {
    position: fixed;
    right: 50px; /* 左側と対になるように配置 */
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(220, 50, 50, 0.75); /* 色のみ変更 */
    color: white;
    padding: 25px;
    width: 500px; /* 左側と幅を合わせる */
    border-radius: 15px;
    border: 2px solid white;
    box-shadow: 0 4px 15px rgba(0,0,0,0.5);
    opacity: 1;
    transition: opacity 0.4s ease-in-out;
}

#cpu-display p {
    margin: 0 0 10px 0;
    font-weight: bold;
}

/* 一行目の文字サイズ */
#cpu-display p:first-child {
    font-size: 1.8rem;
}

/* 二行目の文字サイズ */
#cpu-display p:last-child {
    font-size: 1.2rem;
    margin-bottom: 0;
}

#cpu-display span {
    color: #ffdd57; /* 左側と色を合わせる */
}
/* game.css の一番下に追加 */

/* エラーメッセージのデザイン */
#feedback-message {
    top: 340px;
    font-size: 1.3em;
    color: yellow;
    font-weight: bold;
    padding: 15px 25px;
    
    border-radius: 6px;
    
    
    /* 元からあるfeedbackクラスとデザインが混ざらないように調整 */
    margin: 15px auto;
    text-align: center;
    
    /* 最初は非表示にしておき、文字が入った時だけ表示されるようにする */
    visibility: hidden;
    opacity: 0;
    transition: opacity 0.2s;
}

/* 文字が入った時だけ表示 */
#feedback-message:not(:empty) {
    visibility: visible;
    opacity: 1;
}